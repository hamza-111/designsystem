mixin etapier(data)
  - var data          = data || {}
  - var progessBar    = data.progessBar || "0"
  - var noCursser     = data.noCursser || false
  - var current       = data.current || 3
  - var obj           = data.obj || {1: 'step 1', 2: 'step 2', 3: 'step 3', 4: 'step 4', 5: 'step 5'}
  - var header        = data.header || false
  //- .c-etapier
    - La barre de progression 'c-progressBar__line' est manipulée dynamiquement à travers son css "scaleX" via son attribut style
    - Les panneaux de progression 'c-progressStep' sont positionnés verticalement le long de la barre de progression dynamiquement à travers leur css "left" via leur attribut style
    - Accessibilité : ARIA de la progressbar : https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role
  .c-etapier()&attributes(attributes)
    .c-etapier__wrap 
      .c-etapier__wrapItem(class=noCursser? "c-timeLine--noCurssor" : "")
        if block
          block
        else 
          each val, key in obj
            if header
              span(class=current==key?"is-current":"" class=key<current?"is-past":"" ).c-etapier__item=key
                span=val
                  if header
                    .icon.icon-carousel-next
            else
              a(href="#key" class=current==key?"is-current":"" class=key<current?"is-past":"" ).c-etapier__item=key
                span=val
      .c-etapier__progessBar
        .c-etapier__progessBarCurrent(style="width:" + progessBar + "%;")

//- la classe "is-past" a ajouter manuellement sur la mixin
//- exemple :  +etape().is-past

mixin etape(data)
  - var data          = data || {}
  - var label         = data.label || "step"
  - var step          = data.step || 1
  - var currentStep   = data.currentStep || ""

  
  a(href="#" class=!currentStep? "" : "is-current")&attributes(attributes).c-etapier__item=step
    span!=label