include ../../toolTip/toolTip
include ../../fieldInfo/fieldInfo

mixin inputMat(data)
  - var data           = data || {}
  - var label          = data.label || false
  - var id             = data.id || false
  - var name           = data.name || false
  - var placeholder    = data.placeholder || false
  - var autoComplete   = data.autoComplete || false
  - var float          = data.float || false
  - var hiddenLabel    = data.hiddenLabel || false
  - var required       = data.required || false
  - var type           = data.type || "text"
  - var pattern        = data.pattern || false
  - var blockHelper    = data.blockHelper || false
  - var check          = data.check || false
  - var dataValidation = data.dataValidation || false
  - var minlength      = data.minlength  || false
  - var maxlength      = data.maxlength  || false
  - var waiting        = data.waiting  || false
  - var iconRight      = data.iconRight  || false
  - var textRight      = data.textRight  || false
  - var toolTip        = data.toolTip  || false
  - var toolTipTitle   = data.toolTipTitle  || ""
  - var toolTipLabel   = data.toolTipLabel  || false
  - var iban           = data.iban  || false
  - var disabled       = data.disabled  || false
  - var flatpickr      = data.flatpickr  || false
  - var seuil          = data.seuil  || false

  case type
    when 'email'
      - pattern = "email"
    //- when 'password'
    //-   - pattern = "password"

  case pattern
    when 'email'
      //- pattern = "^[^@]+([@]{1})[0-9a-zA-Z\\._-]+([\\.]{1})[0-9a-zA-Z\\._-]+$"
      - pattern = "^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+([\\.]{1})[0-9a-zA-Z\\._-]+$"
    when 'password'
      - pattern = "^(?=.*[A-Z_])(?=.*\d)(?=.*[^A-Za-z0-9]).{7,20}$"
    when 'tel'
      - pattern = "^(0|\\+33)[1-9]([-. ]?[0-9]{2}){4}$"
    when 'cp'
      - pattern = "^[0-9]{5}$"
    when 'iban'
      - pattern = "^[A-Za-z]{2}[0-9]{2}[\ ?][(A-Za-z0-9)(\ )?]{12,37}$"
    when 'date'
      - pattern = "^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$"
    when false
      - pattern = false
    default
      - pattern = pattern


  span.c-inputMat(
    data-e-field-validation=dataValidation ? dataValidation : false
    data-e-password=type==='password' ? 'data-e-password' : false
    data-e-float-label=float ? 'data-e-float-label' : false
    data-e-blockHelper=blockHelper==='password' ? 'data-e-blockHelper' : false
    class=disabled ? "is-disabled" : ""
  )&attributes(attributes)
    span.c-inputMat__wrap
      if seuil
        span.c-inputMat__span €/mois
      input.c-inputMat__field(
        id=id
        name=name
        type=type
        minlength=minlength
        maxlength=maxlength
        autocapitalize="off"
        required=required
        pattern=pattern
        disabled=disabled
        placeholder=placeholder
        autocomplete=autoComplete ? "off" : false
        class=type==='password' ? 'c-inputMat__field--password' : false
        class=toolTip ? 'c-inputMat__field--hasElemRight c-inputMat__field--hasReachableElem' : false
        class=(check || iconRight || textRight) ? 'c-inputMat__field--hasElemRight' : false
        data-e-iban=iban ? 'data-e-iban' : false
        data-flatpickr=flatpickr
      )
      //- quand le label est ailleur (pensez à mettre un placeholder)
      if label
        label.c-inputMat__label(
          for=id
          class=hiddenLabel ? 'u-visibilityHidden' : ''
        )!=label
          if toolTipLabel==="label"
            +toolTip({
              modalTarget: toolTip,
              title: toolTipTitle
          })

      //- la ligne sous l'input
      span.c-inputMat__inputLine

      //- éléments à droite :
      if iconRight || textRight || type === "password" || check || toolTip
        span.c-inputMat__rightBlock
          //- afficher/cacher oeil
          if type === "password"
            button.c-inputMat__password.icon.icon-eye-slash(
              data-e-showpassword
              type="button"
            )
              span.u-visibilityHidden Afficher ou masquer le mot de passe

          //- picto ou unité
          if iconRight
            span.icon(class=iconRight)
          else if textRight
            span!=textRight

          //- check verte
          if check
            span.icon.icon-thin_check.c-inputMat__check

          //- avec un tooltip
          if !toolTipLabel
            if toolTip 
              +toolTip({
                modalTarget: toolTip
              })

      //- dropdown de suggestions
      if autoComplete
        +suggest

      if waiting
        +spinner

    if dataValidation
      +fieldInfo({
        typeMessage: 'error',
        input: true,
        message: "Texte d’erreur. Lorem ipsum dolor sit amet, tulem consectetur adipisicing elit, sed do eiusmod tempor"
      })(data-e-field-validation-error)
