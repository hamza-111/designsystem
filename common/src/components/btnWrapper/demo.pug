//- +buttonWrapper
h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Composant btnWrapper

+demo({
  desc: "Composant btnWrapper: lien ou button au besoin"
})
  +btnWrapper
    +baseBtn({
      text: 'toto',
      button: true
    })

  +btnWrapper
    +baseBtn({
      text: 'Hello',
      secondary: true
    })
    +baseBtn({
      text: 'Ni hao'
    })

h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Bouton large

+demo({
  desc: 'Ajouter la classe <code>c-baseBtn--large</code> à <code>c-baseBtn</code>'
})
  +btnWrapper
    +baseBtn({
      text: 'Petit bouton deviendra grand'
    }).c-baseBtn--large


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Etat disabled

+demo({
  desc: `
    - Si le composant est un bouton ajouter l'attribut <code>disabled</code><br/>
    - Si le composant est un lien ajouter la classe <code>is-disabled</code>
  `
})
  +btnWrapper
    +baseBtn({
      text: 'Je suis bouton désactivé',
      button: true
    })(disabled)
    +baseBtn({
      text: 'Je suis lien désactivé'
    }).is-disabled


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Un bouton qui prend toute la largeur de son parent sur mobile seulement

+demo({
  desc: 'Ajouter la classe <code>c-btnWrapper--fullOnMobile</code> à <code>c-btnWrapper</code>'
})
  +btnWrapper().c-btnWrapper--fullOnMobile
    +baseBtn({
      text: 'Je cache bien mon jeu',
      secondary: true
    })
    +baseBtn({
      text: 'Et moi donc !'
    })


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Alignements

+demo({
  desc: 'Ajouter la classe <code>c-btnWrapper--alignLeft</code> ou <code>c-btnWrapper--alignRight</code>'
})
  +btnWrapper().c-btnWrapper--alignLeft
    +baseBtn({
      text: 'Je cache bien mon jeu',
      secondary: true
    })
    +baseBtn({
      text: 'Et moi donc !'
    })

  +btnWrapper().c-btnWrapper--alignRight
    +baseBtn({
      text: 'Je cache bien mon jeu',
      secondary: true
    })
    +baseBtn({
      text: 'Et moi donc !'
    })


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Ecarter les boutons

+demo({
  desc: 'Ajouter la classe <code>c-baseBtn--push</code> au premier des boutons à s\'écarter sur la droite'
})
  +btnWrapper()
    +baseBtn({
      text: '1'
    })
    +baseBtn({
      text: '2'
    })
    +baseBtn({
      text: '3'
    })
    +baseBtn({
      text: '4'
    }).c-baseBtn--push


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Bouton Filaire

+demo({
  desc: 'Ajouter la classe <code>c-baseBtn--empty</code> à <code>c-baseBtn</code>'
})
  +btnWrapper()
    +baseBtn({
      text: "Retour",
      iconLeft: "icon-chevron-left",
      empty: true
    })
    +baseBtn({
      text: "Suivant",
      iconRight: "icon-chevron-right",
      empty: true
    })
    +baseBtn({
      text: "Bouton filaire",
      iconRight: "icon-bold-download",
      empty: true
    })


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Le loader

+demo({
  desc: 'Bouton avec loader : ajouter la classe <code>is-loading</code> pour l\'activer'
})
  +btnWrapper().c-btnWrapper--fullOnMobile
    +baseBtn({
      text: "Avec un loader",
      hasLoader: true,
      button: true
    }).c-baseBtn--large

    +baseBtn({
      text: "Avec un loader",
      hasLoader: true,
      button: true
    }).is-loading.c-baseBtn--large


h2(style="font-size:2rem;font-weight:bold;margin:10px 0 20px;") Décompte

+demo({
  desc: `
    Bouton avec un décompte en seconde paramètre par default<br>
    <br>
    Ajouter la classe <code>has-countDown</code> au bouton<br>
    Ajouter un attribut <code>data-e-countdown</code> au bouton qui peut prendre en paramètre optionnel un objet :<br>
    - la clé <code>count</code> permet de déterminer la durée du timer en secondes (25s par défaut)<br>
    - la clé <code>autoStart</code> à false par défaut, passée à true pour lancer le compteur dès le chargement de la page<br>
    <br>
    Pour appeler la méthode en js -> <code>$0.eCount.timerCountDown()</code><br>
    `
})
  +btnWrapper().c-btnWrapper--fullOnMobile
    +baseBtn({
      button: true,
      text: " Décompte",
      countDown: true,
    })(disabled data-e-countdown).c-baseBtn--large

    +baseBtn({
      button: true,
      text: " Décompte",
      countDown: true,
    })(
      disabled data-e-countdown=`
      {
        "autoStart": true
      }
    `).c-baseBtn--large

    +baseBtn({
      button: true,
      text: " Décompte",
      countDown: true
    })(disabled data-e-countdown=`{
        "count": 5,
        "autoStart": true
        }`).c-baseBtn--large
