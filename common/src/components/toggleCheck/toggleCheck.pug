include ../formMat/checkboxMat/checkboxMat

mixin toggleCheck(data)
  - var data  = data || {}

  // .c-toggleCheck
  .c-toggleCheck&attributes(attributes)
    block
  // end .c-toggleCheck



mixin toggleCheckElem(data)
  - var data  = data || {}
  - var labelTitle   = data.labelTitle || 'Titre par d√©faut'
  - var checkBoxId   = data.checkBoxId || 'id1'
  - var toggleTarget = data.toggleTarget || 'defaultName'
  - var hasBanner    = data.hasBanner || false
  - var noLabel      = data.noLabel || false
  - var boxBorder    = data.boxBorder || false
  - var boxFX        = data.boxFX || false

  // .c-toggleCheckElem
  .c-toggleCheckElem(
    data-e-toggleCheck
    class=noLabel ? 'c-toggleCheckElem--hiddenLabel' : false
    class=boxBorder ? 'c-toggleCheckElem--boxBorder' : false
    class=boxFX ? 'c-toggleCheckElem--boxFX' : false
  )
    if hasBanner
      .c-toggleCheckBanner.l-toggleCheckPadding
        .c-toggleCheckBanner__wrapper!=hasBanner

    .c-toggleCheckElem__header
      if noLabel
        +checkboxMat({
          label: labelTitle,
          id: checkBoxId,
          labelIsHidden: true
        }).c-toggleCheckElem__checkBox(data-e-switch-toggle=toggleTarget)
        h3.c-toggleCheckElem__title.u-heading-3.u-margin-b-10.u-theme-color(data-e-switch-toggle=toggleTarget)=labelTitle
      else
        +checkboxMat({
          label: labelTitle,
          id: checkBoxId
        }).c-toggleCheckElem__checkBox(data-e-switch-toggle=toggleTarget)

    .c-toggleCheckElem__content
        block
  // end .c-toggleCheckElem