
/**
 * Grid simple usage:
 * `.l-row .l-col-xxx` - Grid to use as much as possible!
 *
 *     @example
 *     h3.sg Simple usage
 *     .l-row
 *       .l-col-medium-12: .fill
 *     .l-row
 *       .l-col-medium-8: .fill
 *       .l-col-medium-4: .fill
 */

/**
 * Grid push columns:
 * `.l-row .l-col-xxx.l-push-xxx` - Grid to use as much as possible!
 *
 *     @example
 *     h3.sg Push columns
 *     .l-row
 *       .l-col-small-6.l-push-small-3: .fill
 */

/**
 * Grid basic responsive:
 * `.l-row .l-col-xxx` - Grid to use as much as possible!
 *
 *     @example
 *     h3.sg Basic responsive
 *     .l-row
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 *       .l-col-small-12.l-col-medium-6.l-col-large-4: .fill
 */

/**
 * Grid nested grids:
 * `.l-row .l-col-xxx` - Grid to use as much as possible!
 *
 *     @example
 *     h3.sg Nested grids
 *     .l-row
 *       .l-col-medium-4.l-col-small-12: .fill
 *       .l-col-medium-4.l-col-small-12: .fill
 *       .l-col-medium-4.l-col-small-12
 *         .l-row
 *           .l-col-medium-6.l-col-small-12: .fill
 *           .l-col-medium-6.l-col-small-12: .fill
 */

/**
 * Grid no gutters:
 * `.l-row.l-row--nogut` - Grid to use as much as possible!
 *
 *     @example
 *     h3.sg No gutters
 *     .l-row.l-row--nogut
 *       .l-col-medium-8: .fill
 *       .l-col-medium-4: .fill
 */

/**
 * Grid no side gutter:
 * `.l-row.l-row--noSideGut` - enlève les padding à droite et à gauche
 *
 *     @example
 *     h3.sg No side gutters
 *     .l-row.l-row--noSideGut
 *       .l-col-medium-8: .fill
 *       .l-col-medium-4: .fill
 */

$grid-gutter: 20px;

// row
.l-row {
  @extend %clear-after;

  &.l-row--noSideGut {
    margin-left: 0 - $grid-gutter /2;
    margin-right: 0 - $grid-gutter /2;
  }
}

// col
[class*="l-col-"] {
  float: left;
  padding-right: $grid-gutter / 2;
  padding-left: $grid-gutter / 2;
  width: 100%;
  min-height: 1px;

  // nested row
  > .l-row {
    margin-left: 0 - $grid-gutter /2;
    margin-right: 0 - $grid-gutter /2;
  }

  // no gutter
  .l-row--nogut > & {
    padding-left: 0;
    padding-right: 0;

    > .l-row {
      margin-left: 0;
      margin-right: 0;
    }
  }
}

// col widths
@for $i from 1 through 12 {
  .l-col-small-#{$i} {
    width: (100% / (12/$i));
  }
  .l-push-small-#{$i} {
    margin-left: (100% / (12/$i));
  }
}

@include media(">=small") {
  @for $i from 1 through 12 {
    .l-col-medium-#{$i} {
      width: (100% / (12/$i));
    }
    .l-push-medium-#{$i} {
      margin-left: (100% / (12/$i));
    }
  }
}

@include media(">medium") {
  @for $i from 1 through 12 {
    .l-col-large-#{$i} {
      width: (100% / (12/$i));
    }
    .l-push-large-#{$i} {
      margin-left: (100% / (12/$i));
    }
  }
}


// PRINT
@media print {
  @for $i from 1 through 12 {
    .l-col-medium-#{$i} {
      width: (100% / (12/$i));
    }
    .l-push-medium-#{$i} {
      margin-left: (100% / (12/$i));
    }
  }
}

@include media("<=small") {
  [class*="l-col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

.u-flexBloc {
  display: flex;
  flex-wrap: wrap;
  margin: 20px -20px;
}


@media #{$small} { 
  .u-flexBloc-columnMobile {
    flex-direction: column;
  }
}

.u-flexBloc-3 {
  width: 29%;
  margin: 20px;
}

@include media("<medium") {
  .u-flexBloc-3 {
    width: 100%;
  }

  .u-flexBloc-md-3 {
    width: 44%;
  }
}

@include media("<=small") {
  .u-flexBloc-3 {
    width: 100%;
  }

  .l-row.l-row--noSideGut {
    margin-left: 0 !important;
    margin-right: 0 !important;
    [class*="l-col-"] {
      padding-right: 0 !important;
      padding-left: 0  !important;
    }
  }
}